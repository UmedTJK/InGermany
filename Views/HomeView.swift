//
//  HomeView.swift
//  InGermany
//
//  Created by SUM TJK on 13.09.25.
//

import SwiftUI

struct HomeView: View {
    @AppStorage("selectedLanguage") private var selectedLanguage: String = "ru"
    @ObservedObject var favoritesManager: FavoritesManager
    let articles: [Article]
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∫ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç–∞—Ç—å–µ
    @State private var isShowingRandomArticle = false
    @State private var randomArticle: Article?

    var body: some View {
        NavigationStack {
            List {
                // üîπ –†–∞–∑–¥–µ–ª —Å –∫–∞—Ä—Ç–æ–π –∏ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç–∞—Ç—å–µ–π
                Section(header: Text("–ü–æ–ª–µ–∑–Ω–æ–µ")) {
                    // –ö–∞—Ä—Ç–∞ –ª–æ–∫–∞—Ü–∏–π
                    NavigationLink {
                        MapView()
                    } label: {
                        Label("–ö–∞—Ä—Ç–∞ –ª–æ–∫–∞—Ü–∏–π", systemImage: "map")
                    }
                    
                    // –ö–Ω–æ–ø–∫–∞ "–°–ª—É—á–∞–π–Ω–∞—è —Å—Ç–∞—Ç—å—è"
                    Button(action: {
                        // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Å—Ç–∞—Ç—å—é –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
                        randomArticle = articles.randomElement()
                        isShowingRandomArticle = true
                    }) {
                        Label("–°–ª—É—á–∞–π–Ω–∞—è —Å—Ç–∞—Ç—å—è", systemImage: "dice.fill")
                            .foregroundColor(.primary)
                    }
                }

                // üîπ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏
                let favorites = favoritesManager.favoriteArticles(from: articles)
                if !favorites.isEmpty {
                    Section(header: Text("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ (\(favorites.count))")) {
                        ForEach(favorites) { article in
                            NavigationLink(value: article) {
                                ArticleRow(
                                    article: article,
                                    favoritesManager: favoritesManager
                                )
                            }
                        }
                    }
                }

                // üîπ –í—Å–µ —Å—Ç–∞—Ç—å–∏
                Section(header: Text("–í—Å–µ —Å—Ç–∞—Ç—å–∏ (\(articles.count))")) {
                    ForEach(articles) { article in
                        NavigationLink(value: article) {
                            ArticleRow(
                                article: article,
                                favoritesManager: favoritesManager
                            )
                        }
                    }
                }
            }
            .navigationTitle("–ì–ª–∞–≤–Ω–∞—è")
            .navigationDestination(for: Article.self) { article in
                ArticleView(
                    article: article,
                    allArticles: articles,
                    favoritesManager: favoritesManager
                )
            }
            .navigationDestination(isPresented: $isShowingRandomArticle) {
                Group {
                    if let randomArticle {
                        ArticleView(
                            article: randomArticle,
                            allArticles: articles,
                            favoritesManager: favoritesManager
                        )
                    }
                }
            }
        }
    }
}

#Preview {
    HomeView(
        favoritesManager: FavoritesManager(),
        articles: DataService.shared.loadArticles()
    )
}
