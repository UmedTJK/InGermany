//
//  HomeView.swift
//  InGermany
//
//  Created by SUM TJK on 13.09.25.
//

import SwiftUI

struct HomeView: View {
    @AppStorage("selectedLanguage") private var selectedLanguage: String = "ru"
    @ObservedObject var favoritesManager: FavoritesManager
    let articles: [Article]
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∫ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç–∞—Ç—å–µ
    @State private var isShowingRandomArticle = false
    @State private var randomArticle: Article?

    var body: some View {
        NavigationStack {
            ScrollView {
                VStack(alignment: .leading, spacing: 24) {
                    // üîπ –†–∞–∑–¥–µ–ª —Å –∫–∞—Ä—Ç–æ–π –∏ —Å–ª—É—á–∞–π–Ω–æ–π —Å—Ç–∞—Ç—å–µ–π
                    Section {
                        VStack(spacing: 12) {
                            // –ö–∞—Ä—Ç–∞ –ª–æ–∫–∞—Ü–∏–π
                            NavigationLink {
                                MapView()
                            } label: {
                                HStack {
                                    Image(systemName: "map")
                                        .foregroundColor(.blue)
                                    Text("–ö–∞—Ä—Ç–∞ –ª–æ–∫–∞—Ü–∏–π")
                                        .foregroundColor(.primary)
                                    Spacer()
                                    Image(systemName: "chevron.right")
                                        .foregroundColor(.gray)
                                        .font(.system(size: 14))
                                }
                                .padding()
                                .background(Color(.systemBackground))
                                .cornerRadius(12)
                                .shadow(color: Color.black.opacity(0.05), radius: 2, y: 1)
                            }
                            
                            // –ö–Ω–æ–ø–∫–∞ "–°–ª—É—á–∞–π–Ω–∞—è —Å—Ç–∞—Ç—å—è"
                            Button(action: {
                                randomArticle = articles.randomElement()
                                isShowingRandomArticle = true
                            }) {
                                HStack {
                                    Image(systemName: "dice.fill")
                                        .foregroundColor(.green)
                                    Text("–°–ª—É—á–∞–π–Ω–∞—è —Å—Ç–∞—Ç—å—è")
                                        .foregroundColor(.primary)
                                    Spacer()
                                    Image(systemName: "chevron.right")
                                        .foregroundColor(.gray)
                                        .font(.system(size: 14))
                                }
                                .padding()
                                .background(Color(.systemBackground))
                                .cornerRadius(12)
                                .shadow(color: Color.black.opacity(0.05), radius: 2, y: 1)
                            }
                        }
                        .padding(.horizontal)
                    } header: {
                        Text("–ü–æ–ª–µ–∑–Ω–æ–µ")
                            .font(.headline)
                            .foregroundColor(.primary)
                            .padding(.horizontal)
                    }

                    // üîπ –ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫–∞—Ä—Ç–æ—á–µ–∫
                    let favorites = favoritesManager.favoriteArticles(from: articles)
                    if !favorites.isEmpty {
                        Section {
                            ScrollView(.horizontal, showsIndicators: false) {
                                HStack(spacing: 16) {
                                    ForEach(favorites) { article in
                                        NavigationLink(
                                            destination: ArticleView(
                                                article: article,
                                                allArticles: articles,
                                                favoritesManager: favoritesManager
                                            )
                                        ) {
                                            FavoriteCard(
                                                article: article,
                                                favoritesManager: favoritesManager
                                            )
                                        }
                                        .buttonStyle(AppleCardButtonStyle())
                                    }
                                }
                                .padding(.horizontal)
                                .padding(.vertical, 8)
                            }
                        } header: {
                            HStack {
                                Text("\(getTranslation(key: "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", language: selectedLanguage)) (\(favorites.count))")
                                    .font(.headline)
                                    .foregroundColor(.primary)
                                
                                Spacer()
                                
                                NavigationLink("–í—Å–µ") {
                                    FavoritesView(
                                        favoritesManager: favoritesManager,
                                        articles: articles
                                    )
                                }
                                .font(.subheadline)
                                .foregroundColor(.blue)
                            }
                            .padding(.horizontal)
                        }
                    }

                    // üîπ –í—Å–µ —Å—Ç–∞—Ç—å–∏ - –æ–±—ã—á–Ω—ã–π —Å–ø–∏—Å–æ–∫
                    Section {
                        LazyVStack(spacing: 12) {
                            ForEach(articles) { article in
                                NavigationLink(
                                    destination: ArticleView(
                                        article: article,
                                        allArticles: articles,
                                        favoritesManager: favoritesManager
                                    )
                                ) {
                                    ArticleRow(
                                        article: article,
                                        favoritesManager: favoritesManager
                                    )
                                }
                            }
                        }
                        .padding(.horizontal)
                    } header: {
                        Text("\(getTranslation(key: "–í—Å–µ —Å—Ç–∞—Ç—å–∏", language: selectedLanguage)) (\(articles.count))")
                            .font(.headline)
                            .foregroundColor(.primary)
                            .padding(.horizontal)
                    }
                }
                .padding(.vertical)
            }
            .navigationTitle(getTranslation(key: "–ì–ª–∞–≤–Ω–∞—è", language: selectedLanguage))
            .background(Color(.systemGroupedBackground))
            .navigationDestination(isPresented: $isShowingRandomArticle) {
                Group {
                    if let randomArticle {
                        ArticleView(
                            article: randomArticle,
                            allArticles: articles,
                            favoritesManager: favoritesManager
                        )
                    }
                }
            }
        }
    }
    
    private func getTranslation(key: String, language: String) -> String {
        let translations: [String: [String: String]] = [
            "–ì–ª–∞–≤–Ω–∞—è": ["ru": "–ì–ª–∞–≤–Ω–∞—è", "en": "Home", "de": "Startseite", "tj": "–ê—Å–æ—Å”£"],
            "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ": ["ru": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "en": "Favorites", "de": "Favoriten", "tj": "–ò–Ω—Ç–∏—Ö–æ–±—à—É–¥–∞"],
            "–í—Å–µ —Å—Ç–∞—Ç—å–∏": ["ru": "–í—Å–µ —Å—Ç–∞—Ç—å–∏", "en": "All Articles", "de": "Alle Artikel", "tj": "“≤–∞–º–∞–∏ –º–∞“õ–æ–ª–∞“≥–æ"],
            "–ü–æ–ª–µ–∑–Ω–æ–µ": ["ru": "–ü–æ–ª–µ–∑–Ω–æ–µ", "en": "Useful", "de": "N√ºtzliches", "tj": "–ú—É—Ñ–∏–¥"]
        ]
        return translations[key]?[language] ?? key
    }
}

#Preview {
    HomeView(
        favoritesManager: FavoritesManager(),
        articles: DataService.shared.loadArticles()
    )
}
